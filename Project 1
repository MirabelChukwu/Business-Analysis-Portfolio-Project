SELECT *
FROM [Bank Customer information]

-- First off, I start by cleaning the dataset. 

-- 1 is Removing Missing value and update witth specific value. 

DELETE FROM [Bank Customer information]
WHERE customer_id IS NULL
   OR credit_score IS NULL
   OR tenure IS NULL
   OR balance IS NULL;


UPDATE [Bank Customer information]
SET customer_id = 'null' WHERE customer_id IS NULL;

UPDATE [Bank Customer information]
SET credit_score ='NULL' WHERE credit_score IS NULL;

UPDATE [Bank Customer information]
SET tenure = 'NULL' WHERE tenure IS NULL;

UPDATE [Bank Customer information]
SET balance = 'NULL' WHERE balance IS NULL;


-- 2 is to remove any duplicate.


WITH CTE AS (
    SELECT customer_id, credit_score, estimated_salary, 
           ROW_NUMBER() OVER (PARTITION BY customer_id, credit_score, estimated_salary ORDER BY (SELECT 0)) AS RowNum
    FROM [Bank Customer information]
)
DELETE FROM CTE WHERE RowNum > 1;



-- 3 is to remove any Inconsistent formats
-- 3.1 is Standardizing Text Case

UPDATE [Bank Customer information]
SET country = UPPER(country);


UPDATE [Bank Customer information]
SET gender = UPPER(gender);


SELECT * 
FROM [Bank Customer information]


--3.2 is Remove leading and trailing spaces from a text column. 

UPDATE [Bank Customer information]
SET customer_id = LTRIM(RTRIM(customer_id));

UPDATE [Bank Customer information]
SET credit_score = LTRIM(RTRIM(credit_score));

UPDATE [Bank Customer information]
SET country= LTRIM(RTRIM(country));

UPDATE [Bank Customer information]
SET age= LTRIM(RTRIM(age));

UPDATE [Bank Customer information]
SET tenure= LTRIM(RTRIM(tenure));

UPDATE [Bank Customer information]
SET balance = LTRIM(RTRIM(balance));

UPDATE [Bank Customer information]
SET products_number = LTRIM(RTRIM(products_number));

UPDATE [Bank Customer information]
SET credit_card = LTRIM(RTRIM(credit_card));

UPDATE [Bank Customer information]
SET active_member = LTRIM(RTRIM(active_member));

UPDATE [Bank Customer information]
SET estimated_salary = LTRIM(RTRIM(estimated_salary));

UPDATE [Bank Customer information]
SET churn= LTRIM(RTRIM(churn));

SELECT *
FROM [Bank Customer information]

--3.3 is Convert a string column to title case

UPDATE [Bank Customer information] 
SET country = CONCAT(UPPER(LEFT(country, 1)),
              LOWER(SUBSTRING(country, 2, LEN(country))));

UPDATE [Bank Customer information] 
SET gender = CONCAT(UPPER(LEFT(gender, 1)),
              LOWER(SUBSTRING(gender, 2, LEN(gender))));


select *
from [Bank Customer information]


--3.4 is i remove non-numeric characters from a numeric column
--1.
UPDATE [Bank Customer information]
SET customer_id = REPLACE(customer_id, '0', '');

--2. 
UPDATE [Bank Customer information]
SET credit_score = REPLACE(credit_score, '0', '');

--3.
UPDATE [Bank Customer information]
SET age = REPLACE(age, '0', '');

--4.
UPDATE [Bank Customer information]
SET tenure = REPLACE(tenure, '0', '');

--5.
UPDATE [Bank Customer information]
SET balance = REPLACE(balance, '0', '');

--6.
UPDATE [Bank Customer information]
SET products_number = REPLACE(products_number, '0', '');

--7.
UPDATE [Bank Customer information]
SET credit_card = REPLACE(credit_card, '0', '');

--8.
UPDATE [Bank Customer information]
SET active_member = REPLACE(active_member, '0', '');

--9.
UPDATE [Bank Customer information]
SET estimated_salary = REPLACE(estimated_salary, '0', '');

--10.
UPDATE [Bank Customer information]
SET churn= REPLACE(churn, '0', '');

SELECT * 
FROM [Bank Customer information]


--4 is removing Incorrect data types
--4.1 is Convert a string column to an integer data type.

ALTER TABLE [Bank Customer information]
ALTER COLUMN customer_id INT;

ALTER TABLE [Bank Customer information]
ALTER COLUMN credit_score INT;

ALTER TABLE [Bank Customer information]
ALTER COLUMN balance INT; 

ALTER TABLE [Bank Customer information]
ALTER COLUMN estimated_salary INT;

SELECT *
FROM [Bank Customer information]


-- 5 is to remove any outliers 
---5.1 balance

WITH Percentiles AS (
  SELECT balance, 
         PERCENTILE_CONT(0.99) WITHIN GROUP (ORDER BY balance) OVER() AS percentile
  FROM [Bank Customer information]
)
UPDATE Percentiles
SET balance = percentile
WHERE balance > percentile;



--5.2 is age 
UPDATE [Bank Customer information]
SET age = 100
WHERE age > 100;

SELECT *
FROM [Bank Customer information]

--Done with data cleaning. 
--now i will start with the Customer Segmentation Analysis.
--- First, i find out What are the key demographic characteristics of the customer base.

-- 1 is to Analyze the distribution of customers based on gender. 

---1.1 checking the Gender Distribution

SELECT gender, COUNT(*) as customer_count
FROM [Bank Customer information]
GROUP BY gender;

--1.2 Checking the Churn Rate by Gender

SELECT gender, COUNT(*) as churned_count
FROM [Bank Customer information]
WHERE churn = 1
GROUP BY gender;

--1.3 Average Age by Gender

SELECT gender, AVG(age) as average_age
FROM [Bank Customer information]
GROUP BY gender;


--1.3.1 Minimum Age by Gender

SELECT gender, MIN(age) AS Minimum_age 
FROM  [Bank Customer information]
GROUP BY gender;

--1.3.1 Max Age By Gender.

SELECT gender,MAX(age) AS Maxi_age 
FROM  [Bank Customer information]
GROUP BY gender;

-- 1.4 Products Number by Gender

SELECT gender, AVG(products_number) as average_products
FROM [Bank Customer information]
GROUP BY gender;

--1.5 Average Tenure by Gender

SELECT gender, AVG(tenure) AS Average_tenure
FROM [Bank Customer information]
GROUP BY gender;

--1.5.1 Mininum Tenure By Gender

SELECT gender, MIN(tenure) AS Mininum_tenure
FROM [Bank Customer information]
GROUP BY gender;

--1.5.2 Maxinum Tenure  By Gender
SELECT gender, MAX(tenure) AS Maxinum_tenure
FROM [Bank Customer information]
GROUP BY gender;

--1.6 Average Balance by Gender

SELECT gender, AVG(balance) AS Average_balance
FROM [Bank Customer information]
GROUP BY gender;

--1.6.1 Mininum Balance by Gender.

SELECT gender,MIN(balance) AS Mininum_balance
FROM [Bank Customer information]
GROUP BY gender;

--1.6.2 Maxinum Balance by Gender.
SELECT gender,MAX(balance) AS Maxinum_balance
FROM [Bank Customer information]
GROUP BY gender;


--1.7 Average Product Number By Gender. 

SELECT gender, AVG(products_number) AS Average_Productsnumber
FROM [Bank Customer information]
GROUP BY gender;

--1.7.1 Mininum Product Number By Gender

SELECT gender,MIN(products_number) AS Mininum_Productsnumber
FROM [Bank Customer information]
GROUP BY gender;

--1.7.2 Maxinum Product Number By Gender
SELECT gender,MAX(products_number) AS Maxinum_Productsnumber
FROM [Bank Customer information]
GROUP BY gender;


--1.8 Credit Card Usage by Gender. 

SELECT gender, COUNT(*) AS	CreditCardUsage
FROM [Bank Customer information]
WHERE credit_card = 1
GROUP BY gender;


--1.9 Active Member by Gender

SELECT gender, COUNT(*) AS	ActiveMemberCount
FROM [Bank Customer information]
WHERE active_member = 1
GROUP BY gender;


--1.10 Estimated Salary by Gender

SELECT gender, AVG(estimated_salary) as average_salary
FROM [Bank Customer information]
GROUP BY gender;

--1.10.1 Mininum Estimated Salary by Gender

SELECT gender, MIN(estimated_salary) as Mininum_salary
FROM [Bank Customer information]
GROUP BY gender;

--1.10.2 Maxinum Estimated Salary by Gender

SELECT gender, MAX(estimated_salary) as Maxinum_salary
FROM [Bank Customer information]
GROUP BY gender;

--1.11 Churn Rate and Non-Churn Rate by Gender
SELECT gender, 
       SUM(CASE WHEN churn = 1 THEN 1 ELSE 0 END) AS churned_count,
       SUM(CASE WHEN churn = 0 THEN 1 ELSE 0 END) AS non_churned_count
FROM [Bank Customer information]
GROUP BY gender;


-- This is conclused the the distribution of customers based on gender.
---2. is the Analyze the distribution of customers based on age.


--2.1 Age Distribution.

SELECT age, COUNT(*) as customer_count
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;


--2.2 Churn Rate by Age

SELECT age, COUNT(*) as churned_count
FROM [Bank Customer information]
WHERE churn = 1
GROUP BY age
ORDER BY age ASC;

--2.3 Average Balance by Age

SELECT age, AVG(balance) as average_balance
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;

--2.3.1 Mininum Balance By Age

SELECT age, MIN(balance) as Mininum_balance
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;

--2.3.2 Maxinum Balance By Age 

SELECT age, Max(balance) as Maxinum_balance
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;

--2.4 Products Number by Age

SELECT age, AVG(products_number) as average_products
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;

--2.4.1 Mininum Products Number by Age
SELECT age, MIN(products_number) as Mininum_products
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;


--2.4.2 Maxinum Products Number by Age
SELECT age, MAX(products_number) as Maxinum_products
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;

--2.5 Credit Card Usage by Age

SELECT age, COUNT(*) AS credit_card_count
FROM [Bank Customer information]
WHERE credit_card = 1
GROUP BY age
ORDER BY age ASC;

--2.6 Active Member Rate by Age.

SELECT age, COUNT(*) as active_member_count
FROM [Bank Customer information]
WHERE active_member = 1
GROUP BY age
ORDER BY age ASC;


--2.7 Tenure by Age.

SELECT age, AVG(tenure) as average_tenure
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;

--2.7.1 Mininum Tenure by Age.
SELECT age, MIN(tenure) as Mininum_tenure
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;

--2.7.2 Maxinum Tenure by Age.
SELECT age, MAX(tenure) as Maxinum_tenure
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;

--2.8 Estimated Salary by Age.
SELECT age, AVG(estimated_salary) as average_salary
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;

--2.8.1 Mininum Estimated Salary by Age.
SELECT age, MIN(estimated_salary) as Mininum_salary
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;

--2.8.1 Maxinum Estimated Salary by Age.
SELECT age, MAX(estimated_salary) as Maxinum_salary
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;

--2.9 Age Distribution by Churn.

SELECT age, 
       SUM(CASE WHEN churn = 1 THEN 1 ELSE 0 END) AS churned_count,
       SUM(CASE WHEN churn = 0 THEN 1 ELSE 0 END) AS non_churned_count
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;


--2.10 Age and Balance Correlation.

SELECT age, balance
FROM [Bank Customer information]
ORDER BY age ASC;


-- This is conclused the the distribution of customers based on age.
---3. is the Analyze the distribution of customers based on Countries.

--3.1 Country Distribution
SELECT country, COUNT(*) AS Customer_Count
FROM [Bank Customer information]
GROUP BY country
order by country ASC;

--3.2 Churn Rate by Country
SELECT country, COUNT(*) AS churned_count
FROM [Bank Customer information]
WHERE churn = 1
GROUP BY country
ORDER BY country ASC;

--3.3 Average Age by Country
SELECT country, AVG(age) AS average_age
FROM [Bank Customer information]
GROUP BY country
ORDER BY country ASC;

--3.4 Average Balance by Country
SELECT country, AVG(balance) AS average_balance
FROM [Bank Customer information]
GROUP BY country
ORDER BY country ASC;

--3.5 Products Number by Country
SELECT country, AVG(products_number) AS average_products
FROM [Bank Customer information]
GROUP BY country
ORDER BY country ASC;

--3.6 Credit Card Usage by Country
SELECT country, COUNT(*) AS credit_card_count
FROM [Bank Customer information]
WHERE credit_card = 1
GROUP BY country
ORDER BY country ASC;


--3.7 Active Member Rate by Country
SELECT country, COUNT(*) AS active_member_count
FROM [Bank Customer information]
WHERE active_member = 1
GROUP BY country
ORDER BY country ASC;

--3.8 Estimated Salary by Country
SELECT country, AVG(estimated_salary) AS average_salary
FROM [Bank Customer information]
GROUP BY country
ORDER BY country ASC;

--3.9 Tenure By Country
SELECT country, AVG(tenure) as average_tenure
FROM [Bank Customer information]
GROUP BY country
ORDER BY country ASC;

--3.10 Churn Rate and Non-Churn Rate by Country
SELECT country, 
       SUM(CASE WHEN churn = 1 THEN 1 ELSE 0 END) AS churned_count,
       SUM(CASE WHEN churn = 0 THEN 1 ELSE 0 END) AS non_churned_count
FROM [Bank Customer information]
GROUP BY country;

--and this end for analysis for country 
--- 4. is that we  Analyze if customers who are active members (actively using bank services) are less likely to churn.

--4.1 Active Member Distribution
SELECT active_member, COUNT(*) AS Custumer_count
FROM [Bank Customer information]
GROUP BY active_member
order by active_member ASC;

--4.2 Churn Rate by Active Membership
SELECT active_member, COUNT(*) AS churned_count
FROM [Bank Customer information]
WHERE churn = 1
GROUP BY active_member
order by active_member ASC;

--4.3 Demographic Characteristics
SELECT active_member, AVG(age) AS average_age, COUNT(*) AS customer_count
FROM [Bank Customer information]
GROUP BY active_member
ORDER BY  active_member ASC;

--4.4 Product Usage
SELECT active_member, AVG(products_number) AS average_products, COUNT(*) AS customer_count
FROM [Bank Customer information]
GROUP BY active_member
ORDER BY  active_member ASC;

--4.5 Balance and Transactions
SELECT active_member, AVG(balance) AS average_balance, COUNT(*) AS customer_count
FROM [Bank Customer information]
GROUP BY active_member
ORDER BY  active_member ASC;

--4.6 Customer Loyalty
SELECT active_member, 
	   AVG(tenure) AS average_tenure,
	   COUNT(*) AS customer_count
FROM [Bank Customer information]
GROUP BY active_member
ORDER BY  active_member ASC;

--4. Cross-selling and Upselling Opportunities
SELECT active_member, 
       SUM(CAST(credit_card AS int)) AS total_credit_card, 
       COUNT(*) AS customer_count
FROM [Bank Customer information]
GROUP BY active_member
ORDER BY  active_member ASC;

-- That is the most important analysis for active member. 
-- 5 is the aanalysis on balance. 

--5.1 is Balance Distribution 
SELECT balance, 
       COUNT(*) AS Custumer_count
FROM [Bank Customer information]
GROUP BY balance
order by balance ASC;

--5.2 Average Balance by Active Membership
SELECT active_member, AVG(balance) AS Active_Membership
FROM [Bank Customer information]
GROUP BY active_member
ORDER BY active_member ASC;


--5.3 Balance and Churn
SELECT churn, AVG(balance) AS average_balance
FROM [Bank Customer information]
GROUP BY churn
ORDER BY churn ASC;

--5.4 Balance by Country
SELECT country, AVG(balance) AS average_balance
FROM [Bank Customer information]
GROUP BY country
ORDER BY country ASC;

--5.5 Balance By Gender
SELECT gender, AVG(balance) AS average_balance
FROM [Bank Customer information]
GROUP BY gender
ORDER BY gender ASC;

--5.6 Balance by Age Group
SELECT CASE
           WHEN age < 18 THEN 'Under 18'
           WHEN age >= 18 AND age < 25 THEN '18-24'
           WHEN age >= 25 AND age < 35 THEN '25-34'
           WHEN age >= 35 AND age < 45 THEN '35-44'
           WHEN age >= 45 AND age < 55 THEN '45-54'
           WHEN age >= 55 THEN '55+'
       END AS age_group,
       AVG(balance) AS average_balance
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;

--5.7 Balance and Credit Card Usage
SELECT credit_card, AVG(balance) AS average_balance
FROM [Bank Customer information]
GROUP BY credit_card
ORDER BY credit_card ASC;

--5.8 Balance and Products Number
SELECT products_number, AVG(balance) AS average_balance
FROM [Bank Customer information]
GROUP BY products_number
ORDER BY products_number ASC;

--5.9 Balance and Tenure
SELECT tenure, AVG(balance) AS average_balance
FROM [Bank Customer information]
GROUP BY tenure
ORDER BY tenure ASC;

--5.10 Balance and Estimated Salary
SELECT estimated_salary, AVG(balance) AS average_balance
FROM [Bank Customer information]
GROUP BY estimated_salary
ORDER BY estimated_salary ASC;



-- lastly is the Estimated Salary of our customers

--6.1 Salary Distribution
SELECT estimated_salary, COUNT(*) AS customer_count
FROM [Bank Customer information]
GROUP BY estimated_salary
ORDER BY estimated_salary ASC;

--6.2 Average Salary by Active Membership
SELECT active_member, AVG(estimated_salary) AS average_salary
FROM [Bank Customer information]
GROUP BY active_member
ORDER BY active_member ASC;

--6.3 Salary and Churn
SELECT churn, AVG(estimated_salary) AS average_salary
FROM [Bank Customer information]
GROUP BY churn
ORDER BY churn ASC;

--6.4 Salary by Country
SELECT country, AVG(estimated_salary) AS average_salary
FROM [Bank Customer information]
GROUP BY country
ORDER BY country ASC;

--6.5 Salary by Age Group
SELECT CASE
           WHEN age < 18 THEN 'Under 18'
           WHEN age >= 18 AND age < 25 THEN '18-24'
           WHEN age >= 25 AND age < 35 THEN '25-34'
           WHEN age >= 35 AND age < 45 THEN '35-44'
           WHEN age >= 45 AND age < 55 THEN '45-54'
           WHEN age >= 55 THEN '55+'
       END AS age_group,
       AVG(estimated_salary) AS average_salary
FROM [Bank Customer information]
GROUP BY age
ORDER BY age ASC;

-- so far i've found my insight on What are the key demographic characteristics of the customer base is and how it affect the Bank.
--there are many more analysis for  key demographic characteristics of the customer base, but i am only the most immportant ones that are needed for the understanding of the data. feel free to study it further. 
---this is also true for the more analysis that I'm going to be doing. 

-----next i look for What is the overall customer churn rate. i will keep it short to the most important. 

--1.1 Total Churned Customers
SELECT COUNT(*) AS total_churned_customers
FROM [Bank Customer information]
WHERE churn = 1;

--1.2 Churn Rate by Country
SELECT country, COUNT(*) AS churn_count
FROM [Bank Customer information]
WHERE churn = 1
GROUP BY country
ORDER BY country ASC;

--1.3 Churn Rate by Gender
SELECT gender, COUNT(*) AS churn_count
FROM [Bank Customer information]
WHERE churn = 1
GROUP BY gender
ORDER BY gender ASC;

--1.4 Churn Rate by Age Group
SELECT CASE
           WHEN age < 18 THEN 'Under 18'
           WHEN age >= 18 AND age < 25 THEN '18-24'
           WHEN age >= 25 AND age < 35 THEN '25-34'
           WHEN age >= 35 AND age < 45 THEN '35-44'
           WHEN age >= 45 AND age < 55 THEN '45-54'
           WHEN age >= 55 THEN '55+'
       END AS age_group,
       COUNT(*) AS churn_count
FROM [Bank Customer information]
WHERE churn = 1
GROUP BY age
ORDER BY age ASC;

--1.5 Churn Rate by Credit Card Usage
SELECT credit_card, COUNT(*) AS churn_count
FROM [Bank Customer information]
WHERE churn = 1
GROUP BY credit_card
ORDER BY credit_card ASC;

--next i look for Churn Rate by Customer Segment

--1.1 Churn Rate Comparison
SELECT gender, churn, COUNT(*) AS churn_count
FROM [Bank Customer information]
GROUP BY gender, churn
ORDER BY gender ASC;

--1.2 Gender and Customer Segments
SELECT gender, age, COUNT(*) AS churn_count
FROM [Bank Customer information]
WHERE churn = 1
GROUP BY gender, age
ORDER BY gender ASC;

--1.3 Gender and Product Usage
SELECT gender, products_number, COUNT(*) AS churn_count
FROM [Bank Customer information]
WHERE churn = 1
GROUP BY gender, products_number
ORDER BY gender ASC;

--1.4 Churn Rate by Country and Gender
SELECT gender, country, COUNT(*) AS churn_count
FROM [Bank Customer information]
WHERE churn = 1
GROUP BY gender, country
ORDER BY gender ASC, country ASC;

--1.5 Churn Rate by Credit Score and Gender
SELECT gender, credit_score, COUNT(*) AS churn_count
FROM [Bank Customer information]
WHERE churn = 1
GROUP BY gender, credit_score
ORDER BY gender ASC, credit_score ASC;

--1.6 Churn Rate by Tenure and Gender
SELECT gender, tenure, COUNT(*) AS churn_count
FROM [Bank Customer information]
WHERE churn = 1
GROUP BY gender, tenure
ORDER BY gender ASC, tenure ASC;

-- I am sucessfully done with my Customer Segmentation analysis
---Now its time to visualize. 
